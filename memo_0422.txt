【当前任务】
1. 整体润色（可扩展性的检查），把演示版本需要的功能全部固定下来（包括RAG测试）
2. 确认寻路的逻辑，尤其是几个区域的可联通定义，还有寻路路线的正确性（尤其是在复杂情况下）

【届时想要演示的部分】
1.


【可扩展性】
## 各模块说明与可扩展点
app/main.py（UI 层）
功能：负责整个 Streamlit 应用的页面渲染、状态管理、用户交互事件分发。
可扩展点：
增加新的 Tab 或控件（如多机器人调度、实时参数调整等）。
自定义渲染函数（在 app/ui.py 中新增组件）。
新的事件处理逻辑（在 app/handlers.py 中扩展）。
SimulationEngine（app/simulation.py）
功能：模拟核心，驱动订单生成、机器人调度与执行。
可扩展点：
支持多机器人并发调度（改写调度策略）。
插入新的模拟策略（如不同优先级算法、动态障碍物等）。
OrderManager & Order（robot/order.py）
功能：负责 Order 的生命周期管理（下单、分发、完成）。
可扩展点：
添加订单优先级、超时放弃等策略。
支持批量订单、打包配送。
PathPlanner（robot/plan.py）
功能：基于 A* 算法计算最短路径。
可扩展点：
插拔式 Planner 策略（Dijkstra、Theta、遗传算法等）。
动态重规划（响应实时障碍物变化）。
Robot / AIEnhancedRobot（robot/robot.py）
功能：调度层，封装普通移动逻辑与 RAG 决策逻辑。
可扩展点：
新的机器人类型（可加电池管理、避障算法等）。
不同智能决策模块的接入。
MotionController（robot/motion_controller.py）
功能：封装一步移动与障碍应对。
可扩展点：
插拔式底盘控制（如差分驱动、拓展碰撞检测、物理仿真）。
RAGModule & 子组件（robot/rag/）
功能：检索增强生成，用于复杂决策（绕行、等待、放弃）。
可扩展点：
替换或改写 LLMClient（接入私有 LLM）。
自定义检索器（替换 FAISS，或不同向量存储）。
增加 Prompt 模板或 KnowledgeBase 格式。
RestaurantLayout & Restaurant（restaurant/）
功能：解析 JSON 布局，构建网格地图并提取关键元素（桌子、厨房、停靠点）。
可扩展点：
支持更复杂的地图要素（动态障碍、可开关门）。
CLI 或 GUI 布局设计器（restaurant_layout.py 待补充）。
可视化模块（visualization/, app/ui.py）
功能：提供 Matplotlib/Plotly 动态和离线动画、统计图表。
可扩展点：
支持 3D 可视化、WebGL 深度渲染。
新的统计指标图（路径热力图、拥堵分析等）。
状态管理（app/state.py）
功能：封装 Streamlit Session State 操作，保持会话一致性。
可扩展点：
增加更多缓存策略（如局部刷新、后端存储）。
支持多人协作模式（实时共享状态）。


flowchart TD
  subgraph 用户界面
    A1["启动应用"]
    A2["初始化页面和会话状态"]
    A3["显示餐厅布局选择"]
    A4["加载并显示所选布局"]
    A5["展示参数控件（是否启用智能模式、订单数量）"]
    A6["点击开始模拟"]
    A7["布局编辑与保存/删除"]
  end

  A1 --> A2 --> A3 --> A4 --> A5 --> A6
  A2 --> A7

  subgraph 模拟核心
    B1["启动模拟并生成订单"]
    B2["管理订单生命周期"]
    B3["判断是否启用智能模式"]
    B4["执行普通配送流程"]
    B5["执行智能配送流程"]
    B6["计算最优配送路径"]
    B7["一步移动并处理障碍"]
    B8["更新订单状态"]
    B9["收集统计数据与路径记录"]
  end

  A6 --> B1
  B1 --> B2 --> B3
  B3 -- 否 --> B4
  B3 -- 是 --> B5
  B4 --> B6
  B5 --> B6
  B6 --> B7 --> B8 --> B9
  B9 --> A1

  subgraph 智能决策子系统
    C1["检索增强决策模块"]
    C2["向量检索组件"]
    C3["知识库管理"]
    C4["提示模板处理"]
    C5["语言模型交互"]
  end

  B5 --> C1
  C1 --> C2 --> C3
  C1 --> C4
  C1 --> C5

  subgraph 可视化与分析
    D1["可视化餐厅布局"]
    D2["可视化配送路径"]
    D3["展示基础统计"]
    D4["绘制统计图表"]
    D5["扩展深度分析"]
  end

  B9 --> D1
  B9 --> D2
  B9 --> D3
  B9 --> D4
  B9 --> D5