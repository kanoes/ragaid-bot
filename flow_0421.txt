flowchart TD
  %% 外部交互
  UI[ユーザーインタフェース] 
  UI --> Sidebar[サイドバー表示<br/>(render_sidebar)]
  Sidebar --> SimBtn[シミュレーションボタン<br/>クリック]
  SimBtn --> Handler[handle_simulation<br/>呼び出し]

  %% 模拟引擎初始化与运行
  Handler --> Engine[SimulationEngine<br/>インスタンス生成]
  Engine --> Run[run(num_orders)<br/>メソッド呼び出し]

  %% 订单循环
  subgraph シミュレーション処理
    Run --> Loop{注文数ループ}
    Loop --> SelectTable[テーブル選択<br/>(random.choice)]
    SelectTable --> MakeOrder[make_order<br/>生成]
    MakeOrder --> BuildRobot[ロボット生成<br/>(build_robot)]
    BuildRobot --> Assign[assign_order<br/>呼び出し]

    %% 分配结果分支
    Assign -->|成功| Simulate[simulate<br/>開始]
    Assign -->|失敗| FailStat[失敗統計更新<br/>(_stats['failed']++)]

    %% 模拟循环内部
    Simulate --> WhilePath{path存在か？}
    WhilePath --> Tick[tick()<br/>呼び出し]
    Tick --> Step[MotionController.step<br/>実行]

    %% 障碍处理分支
    Step -->|障害検知| Obstacle[_handle_obstacle処理]
    Obstacle -->|RAG適用| RAGDecision[RAGModule.make_decision]
    RAGDecision -->|再計画／回避| Replan[PathPlanner.find_path再計画]
    RAGDecision -->|待機| Wait[0.5秒待機]
    Step -->|正常移動| NextStep[path進行]

    %% 完成配送
    Tick --> Finish{ゴール到達？}
    Finish -->|true| FinishDelivery[_finish_delivery呼び出し]
    FinishDelivery --> DeliveredStat[成功統計更新<br/>(_stats['delivered']++)]
    Finish -->|false| WhilePath
  end

  %% 结果回传与展示
  Simulate --> Engine
  Engine --> Return[統計結果返却(stats)]
  Return --> UIResult[結果表示(render_stats)]